package com.uistack.jetpackcomposedemo3.ui.screens

import androidx.compose.animation.animateContentSize
import androidx.compose.animation.core.LinearOutSlowInEasing
import androidx.compose.animation.core.tween
import androidx.compose.foundation.layout.*
import androidx.compose.material.*
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Add
import androidx.compose.material.icons.filled.Check
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.alpha
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.text.style.TextOverflow
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.uistack.jetpackcomposedemo3.R
import com.uistack.jetpackcomposedemo3.ui.theme.*

@ExperimentalMaterialApi
@Composable
fun FAQScreen() {
    Column {
        MainFAQToolbar()
        FAQSection()
    }
    
    BottomText()
}

@Composable
fun BottomText() {
    Box (
        contentAlignment = Alignment.BottomCenter,
        modifier = Modifier.padding(20.dp)
            ){
        Text(text = "Can't find an answer to your questions? Feel free to contact us at help@abcd.com",
        fontSize = 12.sp, color = IconColor3,
            fontFamily = Poppins
            )
    }
}

@ExperimentalMaterialApi
@Composable
fun FAQSection() {
    Column() {
        ExpandableFAQCard(
            "What is Malware ?", "Malware is intrusive software that is " +
                    "designed to damage and destroy computers and computer systems. " +
                    "Malware is a contraction for â€œmalicious software" +
                    "."
        )
        ExpandableFAQCard(
            "How do I contact customer service ?", "You may write us at abcd@ab.com" +
                    " with your query/concern and we'll get back to you as soon as possible."
        )
        ExpandableFAQCard(
            "What will be the duration of the service ?",
            "The members can be admitted under the policy at well defined date for full " +
                    "Cover term (1 Year) from their scheme joining date."
        )
    }
}

@ExperimentalMaterialApi
@Composable
fun ExpandableFAQCard(title: String, description: String) {
    var expandedState by remember { mutableStateOf(false) }

    Card(
        modifier = Modifier
            .fillMaxWidth()
            .animateContentSize(
                animationSpec = tween(
                    durationMillis = 400,
                    easing = LinearOutSlowInEasing
                )
            ),
        shape = Shapes.small,
        onClick = {
            expandedState = !expandedState
        },
        backgroundColor = Background
    ) {

        Column(
            modifier = Modifier
                .fillMaxWidth()
                .padding(horizontal = 20.dp, vertical = 0.dp)
        ) {
            Row(verticalAlignment = Alignment.CenterVertically) {
                Text(
                    text = title,
                    modifier = Modifier.weight(6f),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.SemiBold,
                    maxLines =if(!expandedState) 1 else 3,
                    overflow =if(!expandedState) TextOverflow.Ellipsis else TextOverflow.Visible,
                    fontFamily = Poppins
                )
                IconButton(
                    onClick = { expandedState = !expandedState },
                    modifier = Modifier
                        .weight(1f)
                        .alpha(.5f),
                ) {
                    if (expandedState)
                        Icon(
                            painterResource(id = R.drawable.ic_minimize), contentDescription = "",
                            modifier = Modifier.size(20.dp),
                            tint = IconColor2
                        )
                    else
                        Icon(
                            imageVector = Icons.Default.Add, contentDescription = "",
                            modifier = Modifier.size(20.dp),
                            tint = IconColor2
                        )


                }
            }

            if (expandedState) {
                Text(
                    text = description,
                    modifier = Modifier.padding(bottom = 40.dp),
                    fontSize = 14.sp,
                    color = IconColor2,
                    lineHeight = 18.sp
                )
            }

        }

    }
}

@Composable
fun MainFAQToolbar() {


        Text(
            text = "Frequently   Asked   Questions",
            color = IconColor,
            fontFamily = ReemKufi,
            fontSize = 20.sp,
            fontWeight = FontWeight.SemiBold,
            modifier = Modifier
                .fillMaxWidth()
                .wrapContentHeight(align = Alignment.Top)
                .padding(horizontal = 10.dp, vertical = 30.dp),
            textAlign = TextAlign.Center
        )


}